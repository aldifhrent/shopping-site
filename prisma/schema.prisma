generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String     @id @default(uuid())
  name        String
  description String?
  price       Float?
  images      String?
  quantity    Int?       @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User[]
  categories  Category[]
  color       Color[]

  size Size[]

  @@map("products")
}

model Category {
  id   String @id @default(uuid())
  name String

  product Product[]

  @@map("categories")
}

enum Role {
  GUEST
  MEMBER
  ADMIN

  @@map("roles")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  role           Role      @default(GUEST)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  account Account[]
  product Product[]

  @@map("users")
}

model Account {
  id                String  @id @default(uuid())
  userId            String  @unique
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Color {
  id        String    @id @default(uuid())
  name      String
  value     String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("colors")
}

model Size {
  id        String    @id @default(uuid())
  name      String
  value     String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("sizes")
}
